<button class="button is-primary mb-4" id="addBrandBtn">Add Brand</button>
<table class="table is-fullwidth">
  <thead>
    <tr><th>Name</th><th>Actions</th></tr>
  </thead>
  <tbody id="brandsTable">
    <% brands.forEach(brand => { %>
      <tr data-id="<%= brand._id %>">
        <td><%= brand.brandName %></td>
        <td>
          <button class="button is-small is-info editBrandBtn">Edit</button>
          <button class="button is-small is-danger deleteBrandBtn">Delete</button>
        </td>
      </tr>
    <% }) %>
  </tbody>
</table>

<!-- Modal Add Brand -->
<div class="modal" id="addBrandModal">
  <div class="modal-background closeModal"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Add Brand</p>
      <button class="delete closeModal" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <input type="text" id="newBrandName" class="input" placeholder="Brand Name">
    </section>
    <footer class="modal-card-foot">
      <button class="button is-success" id="saveNewBrandBtn">Save</button>
      <button class="button cancelModal">Cancel</button>
    </footer>
  </div>
</div>

<!-- Modal Edit Brand -->
<div class="modal" id="editBrandModal">
  <div class="modal-background closeModal"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Edit Brand</p>
      <button class="delete closeModal" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <input type="hidden" id="editBrandId">
      <input type="text" id="editBrandName" class="input" placeholder="Brand Name">
    </section>
    <footer class="modal-card-foot">
      <button class="button is-success" id="saveEditBrandBtn">Save</button>
      <button class="button cancelModal">Cancel</button>
    </footer>
  </div>
</div>

<script>
  // Open Add Brand Modal
  document.getElementById('addBrandBtn').addEventListener('click', () => {
    document.getElementById('newBrandName').value = '';
    document.getElementById('addBrandModal').classList.add('is-active');
  });

  // Save New Brand
  document.getElementById('saveNewBrandBtn').addEventListener('click', async () => {
    const brandName = document.getElementById('newBrandName').value.trim();
    if (!brandName) return alert('Brand name cannot be empty.');

    await fetch('/brands', {
      method: 'POST',
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ brandName })
    });
    location.reload();
  });

  // Open Edit Brand Modal
  document.querySelectorAll('.editBrandBtn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      const row = e.target.closest('tr');
      document.getElementById('editBrandId').value = row.dataset.id;
      document.getElementById('editBrandName').value = row.children[0].innerText;
      document.getElementById('editBrandModal').classList.add('is-active');
    });
  });

  // Save Edited Brand
  document.getElementById('saveEditBrandBtn').addEventListener('click', async () => {
    const id = document.getElementById('editBrandId').value;
    const brandName = document.getElementById('editBrandName').value.trim();
    if (!brandName) return alert('Brand name cannot be empty.');

    await fetch(`/brands/${id}`, {
      method: 'PUT',
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ brandName })
    });
    location.reload();
  });

  // Delete Brand
  document.querySelectorAll('.deleteBrandBtn').forEach(btn => {
    btn.addEventListener('click', async (e) => {
      if (confirm('Delete this brand?')) {
        await fetch(`/brands/${e.target.closest('tr').dataset.id}`, { method: 'DELETE' });
        location.reload();
      }
    });
  });

  // Close Modals
  document.querySelectorAll('.closeModal, .cancelModal').forEach(btn => {
    btn.addEventListener('click', () => {
      document.querySelectorAll('.modal').forEach(modal => modal.classList.remove('is-active'));
    });
  });
</script>
